		<script>
			var MachineList = React.createClass({
				
				getInitialState: function() {
			    	console.log("He pasado por getInitialState");
			    	var m = this.props.data;
			    	return {m};
  				},
			
				render: function() {
					var myList = this
					var allData = this.props.data
					
				
  				
	  				function onClickDelete(row) {
						console.log("Datos iniciales");
						console.log(this.state.m);
						var newData = this.state.m.filter(function (d, i) {
							return i != row;
						});
						
						this.setState({m:newData});
					}
					
					function onClickAdd(){
						var newId = this.refs.inputId.value;
						var newDirection = myList.refs.inputDirection.value;
						var newDescription = myList.refs.inputDescription.value;
						var theRow = {'id': newId, 'Direction': newDirection, 'Description':newDescription};
			
						var contAdded = this.state.m.concat(theRow);
						this.setState({m: contAdded});
					}
					
					
					return React.createElement(
						"div",
						null,
						React.createElement(
							"table",
							{
								className: "mdl-data-table mdl-js-data-table mdl-shadow--2dp",
								style: { width: "100%" } 
							},
							React.createElement(
								"thead",
								null,
								React.createElement(
									"tr",
									null,
									React.createElement(
										"th",
										{ className: "mdl-data-table__cell--non-numeric" },
										"id"
									),
									React.createElement(
										"th",
										{ className: "remember-direction-col" },
										"Direction"
									),
									React.createElement(
										"th",
										{ className: "remember-distance-col" },
										"Description"
									),
									React.createElement(
										"th",
										{ className: "remember-distance-col" },
										"Edit"
									),
									React.createElement(
										"th",
										{ className: "remember-distance-col" },
										"Delete"
									),
									React.createElement(
										"th",
										{ className: "remember-distance-col" },
										React.createElement(
											'button',
											{ 'onClick': onClickAdd.bind(myList), className: 'teal darken-1 waves-effect waves-circle waves-light btn-floating secondary-content' },
											'Add'
										)
									)	
								)
							),
							React.createElement(
								"tbody",
								null,
								// Creates new "MachineRow" elements. For each i, new element (map = for)
								this.state.m.map(function (machine, i) {
									 return React.createElement(
								            "tr",
								            { key: i },
								            React.createElement(
								                "td",
								                null,
								                machine.id
								            ),
								            React.createElement(
								                "td",
								                null,
								                machine.Direction
								            ),
								            React.createElement(
								                "td",
								                null,
								                machine.Description
								            ),
								            React.createElement(
								                "td",
								                null,
								                React.createElement(
													'button', 
													{'onClick': null}, 
													'Edit'
												)
								            ),
								            React.createElement(
								                "td",
								                null,
								                React.createElement(
													'button', 
													{'onClick': onClickDelete.bind(myList, i) }, 
													'Delete'
												)
								            )
								        );
								})
							)
						),
						React.createElement(
							"table",
							{className: "mdl-data-table mdl-js-data-table mdl-shadow--2dp", style: { width: "40%" }},
							React.createElement("tr",null,
								React.createElement("td",null,React.createElement("input",{ref:'inputId',size:"1"},"  ")),
								React.createElement("td",null,React.createElement("input",{ref:'inputDirection',size:"20"}," ")),
								React.createElement("td",null,React.createElement('input',{ref:'inputDescription',size:"20"}," "))
							)
						)
					);
				 }	
			 
			});
/* Aqui se tienen que cargar todas las maquinas que se encuentren en el modelo que llega como entrada   */			
			var rows = 
		   			[[%=rows%]];
/*---------------------------------------------------------------------------------------------------------*/         			 
			
			React.render(
					React.createElement(MachineList, {data:rows}), document.getElementById("list")
			)
			
		</script>	